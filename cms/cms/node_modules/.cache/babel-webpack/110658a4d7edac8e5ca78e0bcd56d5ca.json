{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let DocumentService = /*#__PURE__*/(() => {\n  class DocumentService {\n    constructor(http) {\n      this.documentListChangedEvent = new Subject();\n      this.documents = [];\n      this.documentSelectedEvent = new EventEmitter();\n      this.documentChangedEvent = new EventEmitter();\n      this.http = http;\n      this.maxDocumentId = this.getMaxId();\n    }\n\n    getDocuments() {\n      this.http.get('https://angular-nov21-default-rtdb.firebaseio.com/documents.json').subscribe( // success method\n      documents => {\n        this.documents = documents;\n        this.maxDocumentId = this.getMaxId();\n        let sortingDocs = this.documents.slice;\n        this.documents.sort(function (a, b) {\n          return sortingDocs[a.id] - sortingDocs[b.id];\n        });\n        this.documentChangedEvent.next(this.documents.slice());\n      }, error => {\n        console.log(error.message);\n      });\n      return this.documents.slice();\n    }\n\n    getDocument(id) {\n      return this.documents.slice()[id];\n    }\n\n    addDocument(newDocument) {\n      if (newDocument == undefined || newDocument == null) {\n        return;\n      }\n\n      this.maxDocumentId++;\n      newDocument.id = this.maxDocumentId;\n      this.documents.push(newDocument);\n      this.storeDocuments();\n    }\n\n    updateDocument(originalDocument, newDocument) {\n      if (originalDocument == undefined || originalDocument == null || newDocument == undefined || originalDocument == null) {\n        return;\n      }\n\n      let pos = this.documents.indexOf(originalDocument);\n\n      if (pos < 0) {\n        return;\n      }\n\n      newDocument.id = originalDocument.id;\n      this.documents[pos] = newDocument;\n      this.storeDocuments();\n    }\n\n    deleteDocument(document) {\n      if (!document) {\n        return;\n      }\n\n      const pos = this.documents.indexOf(document);\n\n      if (pos < 0) {\n        return;\n      }\n\n      this.documents.splice(pos, 1);\n      this.storeDocuments();\n    }\n\n    getMaxId() {\n      let maxId = 0;\n\n      for (let document in this.documents) {\n        let currentId = Number(this.documents[document].id);\n\n        if (currentId > maxId) {\n          maxId = currentId;\n          break;\n        }\n      }\n\n      return maxId;\n    }\n\n    storeDocuments() {\n      let documents = JSON.stringify(this.documents);\n      this.http.put('https://angular-nov21-default-rtdb.firebaseio.com/documents.json', documents, {\n        headers: new HttpHeaders({\n          \"content-type\": \"application/json\"\n        })\n      }).subscribe(success => {\n        this.documentChangedEvent.emit(success);\n      });\n    }\n\n  }\n\n  DocumentService.ɵfac = function DocumentService_Factory(t) {\n    return new (t || DocumentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  DocumentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DocumentService,\n    factory: DocumentService.ɵfac\n  });\n  return DocumentService;\n})();","map":null,"metadata":{},"sourceType":"module"}