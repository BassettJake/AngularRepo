{"ast":null,"code":"import { MessageService } from './message.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./message.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./message-edit/message-edit.component\";\nimport * as i4 from \"./message-item/message-item.component\";\n\nfunction MessagesListComponent_app_message_item_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-message-item\", 10);\n  }\n\n  if (rf & 2) {\n    const messageEle_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"message\", messageEle_r1);\n  }\n}\n\nexport class MessagesListComponent {\n  constructor(messageService) {\n    this.messageService = messageService;\n  }\n\n  ngOnInit() {\n    this.messages = this.messageService.getMessages();\n    this.messageService.messageChangedEvent.subscribe(messages => {\n      this.messages = messages;\n    });\n  }\n\n}\n\nMessagesListComponent.ɵfac = function MessagesListComponent_Factory(t) {\n  return new (t || MessagesListComponent)(i0.ɵɵdirectiveInject(i1.MessageService));\n};\n\nMessagesListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MessagesListComponent,\n  selectors: [[\"app-messages-list\"]],\n  features: [i0.ɵɵProvidersFeature([MessageService])],\n  decls: 14,\n  vars: 3,\n  consts: [[1, \"row\"], [1, \"col-md-5\"], [1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [1, \"row\", \"pad-left-right\"], [1, \"title\", \"pull-left\"], [1, \"panel-body\"], [1, \"col-xs-12\"], [3, \"message\", 4, \"ngFor\", \"ngForOf\"], [1, \"panel-footer\"], [3, \"message\"]],\n  template: function MessagesListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵelementStart(5, \"span\", 5);\n      i0.ɵɵtext(6, \"Messages\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 6);\n      i0.ɵɵelementStart(8, \"div\", 0);\n      i0.ɵɵelementStart(9, \"div\", 7);\n      i0.ɵɵtemplate(10, MessagesListComponent_app_message_item_10_Template, 1, 1, \"app-message-item\", 8);\n      i0.ɵɵpipe(11, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 9);\n      i0.ɵɵelement(13, \"app-message-edit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 1, ctx.messages));\n    }\n  },\n  directives: [i2.NgForOf, i3.MessageEditComponent, i4.MessageItemComponent],\n  pipes: [i2.AsyncPipe],\n  styles: [\".title[_ngcontent-%COMP%] {\\r\\n    font-size: 2.5rem;\\r\\n    font-weight: bold;\\r\\n    }\\r\\n    .pad-left-right[_ngcontent-%COMP%] {\\r\\n    padding-left: 1rem;\\r\\n    padding-right: 1rem;\\r\\n    }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2VzLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCO0lBQ0E7SUFDQSxrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CIiwiZmlsZSI6Im1lc3NhZ2VzLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4udGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAyLjVyZW07XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIH1cclxuICAgIC5wYWQtbGVmdC1yaWdodCB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDFyZW07XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAxcmVtO1xyXG4gICAgfVxyXG4gICAgIl19 */\"]\n});","map":{"version":3,"sources":["S:\\School\\Angular\\AngularRepo\\cms\\cms\\src\\app\\messages\\messages-list.component.ts","S:\\School\\Angular\\AngularRepo\\cms\\cms\\src\\app\\messages\\messages-list.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Message } from './message.model';\nimport { MessageService } from './message.service';\n\n@Component({\n  selector: 'app-messages-list',\n  templateUrl: './messages-list.component.html',\n  styleUrls: ['./messages-list.component.css'],\n  providers: [MessageService]\n})\nexport class MessagesListComponent implements OnInit {\n\n  messages: Message[];\n\n  constructor(private messageService: MessageService) { }\n\n  ngOnInit(): void {\n    this.messages = this.messageService.getMessages();\n    this.messageService.messageChangedEvent\n      .subscribe(\n        (messages: Message[]) => {\n          this.messages = messages;\n        }\n      );\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-5\">\n    <div class=\"panel panel-default\">\n      <div class=\"panel-heading\">\n        <div class=\"row pad-left-right\">\n          <span class=\"title pull-left\">Messages</span>\n        </div>\n      </div>\n      <div class=\"panel-body\">\n        <div class=\"row\">\n          <div class=\"col-xs-12\">\n            <app-message-item *ngFor=\"let messageEle of messages | async\" [message]=\"messageEle\"></app-message-item>\n          </div>\n        </div>\n      </div>\n      <div class=\"panel-footer\">\n        <app-message-edit></app-message-edit>\n      </div>\n    </div>\n  </div>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}